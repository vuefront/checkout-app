{"version":3,"sources":["../../../../../src/store/store/checkout/order/order.ts"],"names":["gql","state","order","url","getters","mutations","setOrder","payload","setUrl","actions","create","commit","$vfapollo","mutate","mutation","e","root","update","data","variables","confirm","confirmOrder"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,aAAhB;AAQA,OAAO,MAAMC,KAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAE,IADmB;AAE1BC,EAAAA,GAAG,EAAE;AAFqB,CAArB;AAKP,OAAO,MAAMC,OAAqC,GAAG;AACnDF,EAAAA,KAAK,CAACD,KAAD,EAAQ;AACX,WAAOA,KAAK,CAACC,KAAb;AACD,GAHkD;;AAInDC,EAAAA,GAAG,CAACF,KAAD,EAAQ;AACT,WAAOA,KAAK,CAACE,GAAb;AACD;;AANkD,CAA9C;AASP,OAAO,MAAME,SAA8B,GAAG;AAC5CC,EAAAA,QAAQ,CAACL,KAAD,EAAQM,OAAR,EAAiB;AACvBN,IAAAA,KAAK,CAACC,KAAN,GAAcK,OAAd;AACD,GAH2C;;AAI5CC,EAAAA,MAAM,CAACP,KAAD,EAAQM,OAAR,EAAiB;AACrBN,IAAAA,KAAK,CAACE,GAAN,GAAYI,OAAZ;AACD;;AAN2C,CAAvC;AASP,OAAO,MAAME,OAAqC,GAAG;AACnD,QAAMC,MAAN,OAAyB;AAAA,QAAZ;AAAEC,MAAAA;AAAF,KAAY;;AACvB,QAAI;AACF,YAAM,KAAKC,SAAL,CAAeC,MAAf,CAAsB;AAC1BC,QAAAA,QAAQ,EAAEd,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AAPkC,OAAtB,CAAN;AASD,KAVD,CAUE,OAAOe,CAAP,EAAU;AACVJ,MAAAA,MAAM,CAAC,2BAAD,EAA8BI,CAA9B,EAAiC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAjC,CAAN;AACD;AACF,GAfkD;;AAgBnD,QAAMC,MAAN,QAAyBV,OAAzB,EAAkC;AAAA,QAArB;AAAEI,MAAAA;AAAF,KAAqB;;AAChC,QAAI;AACF,YAAM;AAAEO,QAAAA;AAAF,UAAW,MAAM,KAAKN,SAAL,CAAeC,MAAf,CAAsB;AAC3CC,QAAAA,QAAQ,EAAEd,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SA7BmD;AA8B3CmB,QAAAA,SAAS,EAAEZ;AA9BgC,OAAtB,CAAvB;AAiCA,aAAOW,IAAP;AACD,KAnCD,CAmCE,OAAOH,CAAP,EAAU;AACVJ,MAAAA,MAAM,CAAC,2BAAD,EAA8BI,CAA9B,EAAiC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAjC,CAAN;AACD;AACF,GAvDkD;;AAwDnD,QAAMI,OAAN,QAA0B;AAAA,QAAZ;AAAET,MAAAA;AAAF,KAAY;;AACxB,QAAI;AACF,YAAM;AAAEO,QAAAA;AAAF,UAAW,MAAM,KAAKN,SAAL,CAAeC,MAAf,CAAsB;AAC3CC,QAAAA,QAAQ,EAAEd,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAVmD;AAW3CmB,QAAAA,SAAS,EAAE;AAXgC,OAAtB,CAAvB;AAcAR,MAAAA,MAAM,CAAC,UAAD,EAAaO,IAAI,CAACG,YAAL,CAAkBnB,KAA/B,CAAN;AACAS,MAAAA,MAAM,CAAC,QAAD,EAAWO,IAAI,CAACG,YAAL,CAAkBlB,GAA7B,CAAN;AACD,KAjBD,CAiBE,OAAOY,CAAP,EAAU;AACVJ,MAAAA,MAAM,CAAC,2BAAD,EAA8BI,CAA9B,EAAiC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAjC,CAAN;AACD;AACF;;AA7EkD,CAA9C","sourcesContent":["import gql from \"graphql-tag\";\nimport { ConfirmOrderResult } from \"vuefront-api\";\nimport { RootState } from \"vuefront-store\";\nimport { ActionTree, GetterTree, MutationTree } from \"vuex\";\nexport type State = {\n  order: ConfirmOrderResult | null;\n  url: string;\n};\nexport const state: State = {\n  order: null,\n  url: \"\",\n};\n\nexport const getters: GetterTree<State, RootState> = {\n  order(state) {\n    return state.order;\n  },\n  url(state) {\n    return state.url;\n  },\n};\n\nexport const mutations: MutationTree<State> = {\n  setOrder(state, payload) {\n    state.order = payload;\n  },\n  setUrl(state, payload) {\n    state.url = payload;\n  },\n};\n\nexport const actions: ActionTree<State, RootState> = {\n  async create({ commit }) {\n    try {\n      await this.$vfapollo.mutate({\n        mutation: gql`\n          mutation {\n            createOrder {\n              success\n            }\n          }\n        `,\n      });\n    } catch (e) {\n      commit(\"vuefront/setResponseError\", e, { root: true });\n    }\n  },\n  async update({ commit }, payload) {\n    try {\n      const { data } = await this.$vfapollo.mutate({\n        mutation: gql`\n          mutation (\n            $paymentAddress: [InputField]\n            $paymentAddressId: String\n            $shippingAddressId: String\n            $shippingAddress: [InputField]\n            $paymentMethod: String\n            $shippingMethod: String\n          ) {\n            updateOrder(\n              paymentAddress: $paymentAddress\n              shippingAddress: $shippingAddress\n              shippingAddressId: $shippingAddressId\n              paymentAddressId: $paymentAddressId\n              paymentMethod: $paymentMethod\n              shippingMethod: $shippingMethod\n            ) {\n              shippingMethods {\n                id\n                codename\n                name\n              }\n              totals {\n                title\n                text\n              }\n            }\n          }\n        `,\n        variables: payload,\n      });\n\n      return data;\n    } catch (e) {\n      commit(\"vuefront/setResponseError\", e, { root: true });\n    }\n  },\n  async confirm({ commit }) {\n    try {\n      const { data } = await this.$vfapollo.mutate({\n        mutation: gql`\n          mutation {\n            confirmOrder {\n              order {\n                id\n              }\n              url\n            }\n          }\n        `,\n        variables: {},\n      });\n\n      commit(\"setOrder\", data.confirmOrder.order);\n      commit(\"setUrl\", data.confirmOrder.url);\n    } catch (e) {\n      commit(\"vuefront/setResponseError\", e, { root: true });\n    }\n  },\n};\n"],"file":"order.mjs"}